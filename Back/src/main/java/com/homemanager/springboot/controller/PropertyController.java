package com.homemanager.springboot.controller;

import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;

import com.homemanager.springboot.model.Property;
import com.homemanager.springboot.repository.PropertyRepository;

@CrossOrigin(origins = "http://localhost:3000")
@RestController
@RequestMapping("/api/v1/")
public class PropertyController {
	@Autowired// This means to get the bean called propertyRepository
    // Which is auto-generated by Spring, we will use it to handle the data
	private PropertyRepository propertyRepository;
	
	@GetMapping(path="/properties")
	public @ResponseBody Iterable<Property> getAllProperties() {
		return propertyRepository.findAll();
	}
	
	@GetMapping("/properties/search")
	public ResponseEntity<Property> getEmployeeById(
			@RequestParam(name = "locations", defaultValue = "") String locations,
			@RequestParam(name = "dateFrom", defaultValue = "") String dateFrom,
			@RequestParam(name = "dateTo", defaultValue = "") String dateTo,
			@RequestParam(name = "services", defaultValue = "") String services,
			@RequestParam(name = "constraints", defaultValue = "") String constraints) {
		
		/*Employee employee = propertyRepository.findById(id)
				.orElseThrow(() -> new ResourceNotFoundException("Employee not exist with id :" + id));
		return ResponseEntity.ok(employee);*/
		return null;
	}
}
