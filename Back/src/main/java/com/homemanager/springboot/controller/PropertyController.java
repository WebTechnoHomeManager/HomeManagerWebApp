package com.homemanager.springboot.controller;

import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.configurationprocessor.json.JSONException;
import org.springframework.boot.configurationprocessor.json.JSONObject;
import org.springframework.http.ResponseEntity;

import com.homemanager.springboot.model.Property;
import com.homemanager.springboot.repository.PropertyRepository;

@CrossOrigin(origins = "http://localhost:3000")
@RestController
@RequestMapping("/api/v1/")
public class PropertyController {
	@Autowired
	// This means to get the bean called propertyRepository
    // Which is auto-generated by Spring, we will use it to handle the data
	private PropertyRepository propertyRepository;
	
	@GetMapping(path="/properties")
	public @ResponseBody Iterable<Property> getAllProperties() {
		return propertyRepository.findAll();
	}
	
	@PostMapping("/properties/search")
	public List<Property> getEmployeeById(@RequestBody String dataString) throws JSONException {
		
		JSONObject data = new JSONObject(dataString);
		List<Property> listProperty = propertyRepository.getPropertyBy(
				data.get("locations").toString().replace("[", "").replace("]", "")/*, 
				data.get("dateFrom").toString(), 
				data.get("dateTo").toString(), 
				data.get("services").toString(), 
				data.get("constraints").toString()*/
				);
		/*Employee employee = propertyRepository.findById(id)
				.orElseThrow(() -> new ResourceNotFoundException("Employee not exist with id :" + id));
		return ResponseEntity.ok(employee);*/
		return listProperty;
	}
}
